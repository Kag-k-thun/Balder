
use balder::core::{_, driver::_, application::_};

/**
 * Empty indirect command buffer loading
 */
pub fn emptyLoad (dmut _ : &IndirectCommandAllocator) {}

/**
 * Empty indirect command buffer drawing
     */
pub fn emptyDraw (dmut _ : &IndirectCommandAllocator) {}


pub record DrawPass {

    // The shader used to draw
    pub let dmut shader : (&Shader)?;

    // The command allocator used by the pass
    pub let dmut cmdAlloc : (&IndirectCommandAllocator)? = none;

    // The delegate used to upload the buffers
    pub let mut loadPhase : dg (dmut &IndirectCommandAllocator)-> void;

    // The delegate used to list the draw command to store
    pub let mut drawPhase : dg (dmut &IndirectCommandAllocator)-> void;

    pub self (dmut shader : (&Shader)? = none,
              loadPhase : dg (dmut &IndirectCommandAllocator)-> void = &emptyLoad,
              drawPhase : dg (dmut &IndirectCommandAllocator)-> void = &emptyDraw)
        with shader = alias shader
        , loadPhase = loadPhase
        , drawPhase = drawPhase
    {}

}
