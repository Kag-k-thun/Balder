in texture;

pub mod ::d2;
pub mod ::depth;

use balder::core::{_, driver::_, memory::_};
use balder::utils::log;

use vulkan::_;
use std::config::_;

use sdl2::{image, surface, pixels};

@abstract
pub class Texture {

    let dmut _device : &VulkanDevice;

    // The image view used to bind the texture in shaders
    let dmut _imageView : VkImageView = null;

    prot self (dmut device : &VulkanDevice)
        with _device = alias device
    {}

    /**
     * @returns: the image view of the texture used to bind to descriptor sets
     * */
    pub fn getImageView (mut self)-> dmut VkImageView {
        alias self._imageView
    }

    impl Disposable;
    __dtor (mut self) {
        self:.dispose ();
    }
}

