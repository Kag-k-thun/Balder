in timer;

use std::{stream, fs::_};
use std::config::{_, conv::_};

use balder::core::error;

pub record TimerConfig {

    let mut _ips : i32 = 30;
    let mut _fps : i32 = 60;
    let mut _interactive : bool = false;

    pub self (cfg : &Config)
        throws BalderError
    {
        if let Ok (i) = cfg ["ips"]? {
            self._ips = i.to!{i32} ();
        }

        if let Ok (i) = cfg ["fps"]? {
            self._fps = i.to!{i32} ();
        }

        if let Ok (b) = cfg ["interactive"]? {
            self._interactive = b.to!{bool} ();
        }

    } catch {
        err => {
            throw copy BalderError ("Failed to read timer configuration : " ~ std::conv::to!{[c8]} (err));
        }
    }

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ====================================          GETTERS          =====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    @field
    pub fn ips (self)-> i32 {
        self._ips
    }

    @field
    pub fn fps (self)-> i32 {
        self._fps
    }

    @field
    pub fn interactive (self)-> bool {
        self._interactive
    }

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ======================================          MISC          ======================================
     * ====================================================================================================
     * ====================================================================================================
     */

    impl Streamable;
}
