in root;

use balder::core::driver::_;
use balder::scene::_;
use balder::core::dispose;

/**
 * The root node is a singleton class attached to a scene
 * */
@final
pub class RootNode over Node {

    let dmut _scene : &Scene;

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * =====================================          CTORS          ======================================
     * ====================================================================================================
     * ====================================================================================================
     */

    /**
     * A root node is attached to a scene and has no name
     * @params:
     *    - scene: the scene in which the node is attached
     * */
    pub self (dmut scene : &Scene)
        with super ("")
        , _scene = alias scene
    {}

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * =================================          UPDATE SIGNALS          =================================
     * ====================================================================================================
     * ====================================================================================================
     */

    over onTreeEnter (mut self, dmut who : &Node) {
        self._scene:.registerNode (alias who);
    }

    over onTreeExit (mut self, dmut who : &Node) {
        self._scene:.removeNode (alias who);
    }

    pub over onEnter (mut self, dmut _ : &Scene) {}
    pub over onExit (mut self, dmut _ : &Scene) {}

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ====================================          GETTERS          =====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub over getScene (mut self)-> dmut (&Scene)? {
        (alias self._scene)?
    }

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ===================================          DISPOSING          ====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    impl Disposable {
        pub over dispose (mut self) {
            self.__super:.dispose ();
        }
    }

}
