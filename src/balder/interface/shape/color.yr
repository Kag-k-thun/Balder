in color;

use balder::math::_;
use balder::core::{_,
                   shader::_,
                   shader::buffers::_,
                   application::_,
                   driver::_,
                   config::_};

use balder::utils::_;
use balder::interface::drawer;

/**
 * A 2D colored shape
 * */
@final
pub class ColorShape over Shape {


    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ===================================          CTOR/DTOR          ====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub self (uid : usize,
              dmut drawer : &ShapeDrawer,
              dmut shader : &Shader,
              vbo : &VertexBufferObject,
              ibo : &IndexBufferObject)

        with super (uid,
                    alias drawer,
                    vbo,
                    ibo,
                    ubo-> copy UniformBufferObject (alias shader:.getDevice (), 80),
                    descSet-> shader:.allocateDescriptorSet ())

        throws BalderError
    {}

}
