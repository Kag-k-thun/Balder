in box;


use balder::core::application::_;
use balder::core::_;
use balder::math::_;

use balder::interface::_;
use balder::utils::_;

pub class Box over Widget {

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ======================================          CTOR          ======================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub self (dmut manager : &WidgetManager, name : [c8])
        with super (alias manager, name, WidgetKeys::BOX)
    {}

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ==================================          MOUSE EVENT          ===================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub over onHover (mut self, _ : vec2)-> dmut &Widget {
        self:.setHover (true);
        alias self
    }

    pub over onLoseHoverFocus (mut self) {
        self:.setHover (false);
    }

    pub over onClick (mut self, _ : vec2, _ : u8)-> dmut &Widget {
        self:.setChecked (true);
        alias self
    }

    pub over onClickEnd (mut self, _ : u8)-> dmut &Widget {
        self:.setChecked (false);
        alias self
    }

    pub over onDoubleClick (mut self, _ : vec2)-> dmut &Widget {
        alias self
    }

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * =================================          ATTACH/DETACH          ==================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub over onAttach (mut self) {
        self._attached = true;
        self:.registerShape (WidgetShapeKind::BACKGROUND);
        self:.registerShape (WidgetShapeKind::BORDER);
    }

    pub over onDetach (mut self) {
        self._attached = false;
        self:.disposeShapes ();
    }

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ===================================          DISPOSING          ====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    impl Disposable {
        pub over dispose (mut self) {
            self:.disposeShapes ();
        }
    }

}
